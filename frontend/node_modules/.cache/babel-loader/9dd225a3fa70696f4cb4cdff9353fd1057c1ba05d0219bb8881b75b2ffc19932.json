{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karmadeepsinh Gohil\\\\projects\\\\tech tonic\\\\secure ai\\\\frontend\\\\src\\\\App.jsx\";\n// // src/App.jsx\n// import { useState } from \"react\";\n// import ResultBox from \"./components/ResultBox\";\n\n// function App() {\n//   const [message, setMessage] = useState(\"\");\n//   const [result, setResult] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [darkMode, setDarkMode] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setResult(null);\n\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:5000/predict\", {\n//         method: \"POST\",\n//         headers: {\n// \"Content-Type\": \"application/json\",\n// },\n//         body: JSON.stringify({ message }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Server error. Check your backend.\");\n//       }\n\n//       const data = await response.json();\n//       setResult(data);\n//     } catch (error) {\n//       console.error(\"Error fetching prediction:\", error);\n//       setResult({ error: \"Failed to connect to backend\" });\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className={darkMode ? \"bg-gray-900 text-white min-h-screen\" : \"bg-gray-100 text-gray-900 min-h-screen\"}>\n//       <div className=\"container mx-auto px-6 py-10 flex flex-col items-center\">\n\n//         {/* Header */}\n//         <div className=\"flex justify-between w-full max-w-xl mb-6\">\n//           <h1 className=\"text-3xl font-bold\">🔒 Secure AI</h1>\n//           <button\n//             onClick={() => setDarkMode(!darkMode)}\n//             className=\"px-4 py-2 rounded-lg shadow-md bg-indigo-600 text-white hover:bg-indigo-700\"\n//           >\n//             {darkMode ? \"☀️ Light\" : \"🌙 Dark\"}\n//           </button>\n//         </div>\n\n//         {/* Input Form */}\n//         <form\n//           onSubmit={handleSubmit}\n//           className=\"w-full max-w-xl bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6\"\n//         >\n//           <label className=\"block text-lg font-semibold mb-2\">Enter a Message:</label>\n//           <textarea\n//             value={message}\n//             onChange={(e) => setMessage(e.target.value)}\n//             placeholder=\"Type your message here...\"\n//             rows=\"4\"\n//             className=\"w-full p-3 border rounded-lg mb-4 text-gray-900 dark:text-white dark:bg-gray-700\"\n//           ></textarea>\n\n//           <button\n//             type=\"submit\"\n//             disabled={loading}\n//             className=\"w-full py-3 rounded-lg bg-blue-600 text-white font-semibold hover:bg-blue-700 disabled:bg-gray-400\"\n//           >\n//             {loading ? \"Analyzing...\" : \"Check Message\"}\n//           </button>\n//         </form>\n\n//         {/* Result Section */}\n//         {result && <ResultBox result={result} />}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport AlertOverlay from \"./components/AlertOverlay\";\nimport LimeExplanation from \"./components/LimeExplanation\";\nimport MessageInput from \"./components/MessageInput\";\nimport PredictionResult from \"./components/PredictionResult\";\nimport SafeReply from \"./components/SafeReply\";\n\n// Small helper to stop components from crashing if props are missing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SafeWrapper = ({\n  children\n}) => {\n  try {\n    return children;\n  } catch (err) {\n    console.error(\"Component error:\", err);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: \"\\u26A0\\uFE0F Error rendering component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = SafeWrapper;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(SafeWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SafeWrapper, {\n      children: /*#__PURE__*/_jsxDEV(AlertOverlay, {\n        show: true,\n        onClose: () => alert(\"Closed overlay!\"),\n        message: \"\\u26A0\\uFE0F This is a test alert overlay!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SafeWrapper, {\n      children: /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSend: msg => alert(\"Message sent: \" + msg)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SafeWrapper, {\n      children: /*#__PURE__*/_jsxDEV(PredictionResult, {\n        prediction: \"ham\",\n        confidence: 0.92\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SafeWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SafeReply, {\n        replies: [\"Thanks for your message!\", \"We’ll get back to you shortly.\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SafeWrapper, {\n      children: /*#__PURE__*/_jsxDEV(LimeExplanation, {\n        message: \"Congratulations! You win a prize!\",\n        explanation: [[\"win\", 0.45], [\"prize\", 0.33]]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SafeWrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Header","AlertOverlay","LimeExplanation","MessageInput","PredictionResult","SafeReply","jsxDEV","_jsxDEV","SafeWrapper","children","err","console","error","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","show","onClose","alert","message","onSend","msg","prediction","confidence","replies","explanation","_c2","$RefreshReg$"],"sources":["C:/Users/Karmadeepsinh Gohil/projects/tech tonic/secure ai/frontend/src/App.jsx"],"sourcesContent":["// // src/App.jsx\r\n// import { useState } from \"react\";\r\n// import ResultBox from \"./components/ResultBox\";\r\n\r\n// function App() {\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const [result, setResult] = useState(null);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [darkMode, setDarkMode] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setResult(null);\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://127.0.0.1:5000/predict\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n// \"Content-Type\": \"application/json\",\r\n// },\r\n//         body: JSON.stringify({ message }),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Server error. Check your backend.\");\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setResult(data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching prediction:\", error);\r\n//       setResult({ error: \"Failed to connect to backend\" });\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={darkMode ? \"bg-gray-900 text-white min-h-screen\" : \"bg-gray-100 text-gray-900 min-h-screen\"}>\r\n//       <div className=\"container mx-auto px-6 py-10 flex flex-col items-center\">\r\n        \r\n//         {/* Header */}\r\n//         <div className=\"flex justify-between w-full max-w-xl mb-6\">\r\n//           <h1 className=\"text-3xl font-bold\">🔒 Secure AI</h1>\r\n//           <button\r\n//             onClick={() => setDarkMode(!darkMode)}\r\n//             className=\"px-4 py-2 rounded-lg shadow-md bg-indigo-600 text-white hover:bg-indigo-700\"\r\n//           >\r\n//             {darkMode ? \"☀️ Light\" : \"🌙 Dark\"}\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* Input Form */}\r\n//         <form\r\n//           onSubmit={handleSubmit}\r\n//           className=\"w-full max-w-xl bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6\"\r\n//         >\r\n//           <label className=\"block text-lg font-semibold mb-2\">Enter a Message:</label>\r\n//           <textarea\r\n//             value={message}\r\n//             onChange={(e) => setMessage(e.target.value)}\r\n//             placeholder=\"Type your message here...\"\r\n//             rows=\"4\"\r\n//             className=\"w-full p-3 border rounded-lg mb-4 text-gray-900 dark:text-white dark:bg-gray-700\"\r\n//           ></textarea>\r\n\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={loading}\r\n//             className=\"w-full py-3 rounded-lg bg-blue-600 text-white font-semibold hover:bg-blue-700 disabled:bg-gray-400\"\r\n//           >\r\n//             {loading ? \"Analyzing...\" : \"Check Message\"}\r\n//           </button>\r\n//         </form>\r\n\r\n//         {/* Result Section */}\r\n//         {result && <ResultBox result={result} />}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport AlertOverlay from \"./components/AlertOverlay\";\r\nimport LimeExplanation from \"./components/LimeExplanation\";\r\nimport MessageInput from \"./components/MessageInput\";\r\nimport PredictionResult from \"./components/PredictionResult\";\r\nimport SafeReply from \"./components/SafeReply\";\r\n\r\n// Small helper to stop components from crashing if props are missing\r\nconst SafeWrapper = ({ children }) => {\r\n  try {\r\n    return children;\r\n  } catch (err) {\r\n    console.error(\"Component error:\", err);\r\n    return <div className=\"text-red-500\">⚠️ Error rendering component</div>;\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      <SafeWrapper>\r\n        <Header />\r\n      </SafeWrapper>\r\n\r\n      <SafeWrapper>\r\n        <AlertOverlay\r\n          show={true}\r\n          onClose={() => alert(\"Closed overlay!\")}\r\n          message=\"⚠️ This is a test alert overlay!\"\r\n        />\r\n      </SafeWrapper>\r\n\r\n      <SafeWrapper>\r\n        <MessageInput onSend={(msg) => alert(\"Message sent: \" + msg)} />\r\n      </SafeWrapper>\r\n\r\n      <SafeWrapper>\r\n        <PredictionResult prediction={\"ham\"} confidence={0.92} />\r\n      </SafeWrapper>\r\n\r\n      <SafeWrapper>\r\n        <SafeReply\r\n          replies={[\r\n            \"Thanks for your message!\",\r\n            \"We’ll get back to you shortly.\",\r\n          ]}\r\n        />\r\n      </SafeWrapper>\r\n\r\n      <SafeWrapper>\r\n        <LimeExplanation\r\n          message=\"Congratulations! You win a prize!\"\r\n          explanation={[\r\n            [\"win\", 0.45],\r\n            [\"prize\", 0.33],\r\n          ]}\r\n        />\r\n      </SafeWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}